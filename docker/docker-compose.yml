x-logging:
  &logging
  driver: "json-file"
  options:
    max-size: "32m"
    max-file: "10"
    tag: "{{.Name}}"

services:
  app:
    build:
      context: ..
      dockerfile: app/Dockerfile
      args:
        - PORT=${APP_PORT}
    labels:
      logging: "promtail"
      logging_jobname: "app"
      traefik.enable: true
      traefik.http.routers.app.rule: Host(`localhost`)
      traefik.http.middlewares.ratelimiter.rateLimit.average: 100
      traefik.http.middlewares.ratelimiter.rateLimit.burst: 200
      traefik.http.middlewares.payloadLimiter.buffering.maxRequestBodyBytes: 10485760
      traefik.http.routers.app.middlewares: ratelimiter, payloadLimiter
    logging: *logging
    env_file:
      - ../.env
    networks:
      - core
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:latest
    logging: *logging
    env_file:
      - ../.env
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    networks:
      - core
    volumes:
      - ./config/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./sql/schema:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  redis:
    image: redis:latest
    logging: *logging
    networks:
      - core
    volumes:
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  prometheus:
    image: prom/prometheus:latest
    logging: *logging
    networks:
      - core
    volumes:
      - ./config/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus_data:/prometheus
    depends_on:
      - app

  promtail:
    image: grafana/promtail:latest
    logging: *logging
    command:
      - -config.file=/etc/promtail/promtail.yaml
    networks:
      - core
    volumes:
      - ./config/promtail/promtail.yaml:/etc/promtail/promtail.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock

  loki:
    image: grafana/loki:latest
    logging: *logging
    command:
      - config.file=/etc/loki/loki.yaml
    networks:
      - core
    volumes:
      - ./config/loki/loki.yaml:/etc/loki/loki.yaml

  grafana:
    image: grafana/grafana:latest
    labels:
      traefik.enable: true
      traefik.http.routers.grafana.rule: Host(`grafana.localhost`)
      traefik.http.services.grafana.loadbalancer.server.port: 3000
    logging: *logging
    env_file:
      - ../.env
    networks:
      - core
    volumes:
      - ./config/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana_data:/var/lib/grafana
    depends_on:
      - loki

  traefik:
    image: traefik:latest
    logging: *logging
    env_file:
      - ../.env
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --accesslog=true
    ports:
      - "80:80"
    networks:
      - core
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  core:
    name: core
    driver: bridge

volumes:
  postgres_data:
    name: postgres_data
  redis_data:
    name: redis_data
  prometheus_data:
    name: prometheus_data
    driver: local
  grafana_data:
    name: grafana_data
    driver: local
